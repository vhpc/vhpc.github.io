<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>18th Workshop on Virtualization in High-Performance Cloud Computing</title><link>https://vhpc.github.io/</link><description>Recent content on 18th Workshop on Virtualization in High-Performance Cloud Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vhpc.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://vhpc.github.io/keynote1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vhpc.github.io/keynote1/</guid><description>Keynote Talk: &amp;ldquo;What is RCU and How Does it Help the Linux Kernel Scale?&amp;quot;, Paul E. McKenney, Software Engineer at Meta Abstract:
RCU is used heavily as a replacement for reader-writer locking. But it is not a reader-writer lock. RCU is also used as a replacement for reference counting. But it is not a reference counter. RCU is used to provide type-safe memory. But it is not type-safe memory. RCU is used for many things, but it is none of those things.</description></item><item><title/><link>https://vhpc.github.io/program-details-2022/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vhpc.github.io/program-details-2022/</guid><description>VHPC 2022 Program Details Keynote Talks rtla: finding the sources of OS noise on Linux Speaker: Daniel Bristot De Oliveira, Senior Principal Software Engineer in the real-time kernel team at Red Hat.
Abstract: Currently, Real-time Linux is evaluated using a black-box approach. While this method provides an overview of the system, it fails to provide a root cause analysis for unexpected values. Developers have to use kernel trace features to debug these cases, requiring extensive knowledge about the system and fastidious tracing setup and breakdown.</description></item></channel></rss>